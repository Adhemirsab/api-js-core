service: api-js-core

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  architecture: arm64
  region: ${env:AWS_REGION}
  stage: ${env:STAGE}
  httpApi:
    cors: true
    name: ${self:service}-${self:provider.stage}-api
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - lambda:*
            - s3:*
            - dynamodb:*
            - ssm:*
            - sqs:*
          Resource: "*"

package:
  individually: true
  patterns: ["!**/*", "package.json"]

custom:
  version: "v1"
  prefix: ${self:service}-${self:provider.stage}

functions:
  dummy:
    handler: dist/dummy.handler
    package:
      patterns: dist/dummy.js
  createLoan:
    handler: dist/create-loan.handler
    package:
      patterns: dist/create-loan.js
    events:
      - httpApi:
          method: POST
          path: /${self:custom.version}/loans
    environment:
      ENV_LOAN_TABLE_NAME: !Ref LoanTable
      ENV_NOTIFICATION_FUNCTION_ARN: !GetAtt DummyLambdaFunction.Arn
      ENV_SCHEDULER_ROLE_ARN: !GetAtt SchedulerRole.Arn

resources:
  Resources:
    LoanTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.prefix}-loantable
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        BillingMode: "PAY_PER_REQUEST"

    SchedulerRole:
      Type: "AWS::IAM::Role"
      Properties:
        Description: "${self:custom.prefix} scheduler role to invoke Lambda functions"
        RoleName: ${self:custom.prefix}-schedulerrole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: scheduler.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: DefaultPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - lambda:InvokeFunction
                  Resource: "*"
